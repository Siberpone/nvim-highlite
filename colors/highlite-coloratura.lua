local Groups = require("highlite.groups") --- @type highlite.Groups
local Highlite = require("highlite") --- @type Highlite
local Palette = require("highlite.color.palette") --- @type highlite.color.Palette

local bg = vim.api.nvim_get_option("background") -- get the background
local palette = Palette.derive(bg, bg == "dark" and {
	annotation = "#ce5c59",
	attribute = "#ce5c59",
	bg = "#1e1c32",
	bg_contrast_high = "#3d385f",
	bg_contrast_low = "#2b2546",
	boolean = "#b383c6",
	buffer_active = "#3d385f",
	buffer_alternate = "#8cafb0",
	buffer_current = "#2d9caa",
	character = "#41a886",
	character_special = "#ce5c59",
	class = "#4697b8",
	comment = "#775f9e",
	comment_documentation = "#775f9e",
	comment_special = "#775f9e",
	conditional = "#f3dc6c",
	constant = "#b383c6",
	constant_builtin = "#ddb4fa",
	constructor = "#ddb4fa",
	decorator = "#ce5c59",
	define = "#ce5c59",
	diff_add = "#41a886",
	diff_change = "#f3dc6c",
	diff_delete = "#ce5c59",
	enum = "#4697b8",
	error = "#ce5c59",
	event = "#f3dc6c",
	field = "#d8f0e6",
	field_enum = "#d8f0e6",
	float = "#b383c6",
	fold = "#2b2546",
	func = "#f49b3b",
	func_builtin = "#f49b3b",
	hint = "#b383c6",
	identifier = "#b383c6",
	include = "#f49b3b",
	info = "#4697b8",
	interface = "#4697b8",
	interface_builtin = "#4697b8",
	keyword = "#f3dc6c",
	keyword_coroutine = "#f3dc6c",
	keyword_function = "#f3dc6c",
	keyword_operator = "#f3dc6c",
	keyword_return = "#f3dc6c",
	label = "#8cafb0",
	loop = "#f3dc6c",
	macro = "#d8f0e6",
	message = "#d8f0e6",
	method = "#f49b3b",
	namespace = "#f49b3b",
	number = "#b383c6",
	ok = "#41a886",
	operator = "#8cafb0",
	parameter = "#f3dc6c",
	preproc = "#ce5c59",
	preproc_conditional = "#ce5c59",
	property = "#d8f0e6",
	punctuation = "#8cafb0",
	punctuation_bracket = "#8cafb0",
	punctuation_delimiter = "#8cafb0",
	punctuation_special = "#8cafb0",
	search = "#775f9e",
	select = "#952099",
	special = "#ddb4fa",
	statement = "#f3dc6c",
	storage = "#4697b8",
	string = "#41a886",
	string_escape = "#ce5c59",
	string_regex = "#f3dc6c",
	string_special = "#ddb4fa",
	structure = "#4697b8",
	syntax_error = "#ce5c59",
	tag = "#2d9caa",
	tag_attribute = "#d8f0e6",
	tag_delimiter = "#8cafb0",
	text = "#d8f0e6",
	text_contrast_bg_high = "#8cafb0",
	text_contrast_bg_low = "#775f9e",
	text_environment_name = "#d8f0e6",
	text_environment = "#d8f0e6",
	text_literal = "#d8f0e6",
	text_math = "#b383c6",
	text_reference = "#b383c6",
	throw = "#ce5c59",
	todo = "#4697b8",
	type = "#4697b8",
	type_builtin = "#4697b8",
	type_parameter = "#b383c6",
	uri = "#2d9caa",
	variable = "#d8f0e6",
	variable_builtin = "#ddb4fa",
	warning = "#f3dc6c",
} or {
	annotation = "#ce5c59",
	attribute = "#ce5c59",
	bg = "#1e1c32",
	bg_contrast_high = "#952099",
	bg_contrast_low = "#8cafb0",
	boolean = "#b383c6",
	buffer_active = "#3d385f",
	buffer_alternate = "#2b2546",
	buffer_current = "#2d9caa",
	character = "#41a886",
	character_special = "#ce5c59",
	class = "#4697b8",
	comment = "#775f9e",
	comment_documentation = "#775f9e",
	comment_special = "#775f9e",
	conditional = "#f3dc6c",
	constant = "#b383c6",
	constant_builtin = "#ddb4fa",
	constructor = "#ddb4fa",
	decorator = "#ce5c59",
	define = "#ce5c59",
	diff_add = "#41a886",
	diff_change = "#f3dc6c",
	diff_delete = "#ce5c59",
	enum = "#4697b8",
	error = "#ce5c59",
	event = "#f3dc6c",
	field = "#d8f0e6",
	field_enum = "#d8f0e6",
	float = "#b383c6",
	fold = "#2b2546",
	func = "#f49b3b",
	func_builtin = "#f49b3b",
	hint = "#b383c6",
	identifier = "#b383c6",
	include = "#f49b3b",
	info = "#4697b8",
	interface = "#4697b8",
	interface_builtin = "#4697b8",
	keyword = "#f3dc6c",
	keyword_coroutine = "#f3dc6c",
	keyword_function = "#f3dc6c",
	keyword_operator = "#f3dc6c",
	keyword_return = "#f3dc6c",
	label = "#8cafb0",
	loop = "#f3dc6c",
	macro = "#d8f0e6",
	message = "#d8f0e6",
	method = "#f49b3b",
	namespace = "#f49b3b",
	number = "#b383c6",
	ok = "#41a886",
	operator = "#8cafb0",
	parameter = "#d8f0e6",
	preproc = "#ce5c59",
	preproc_conditional = "#ce5c59",
	property = "#d8f0e6",
	punctuation = "#8cafb0",
	punctuation_bracket = "#8cafb0",
	punctuation_delimiter = "#8cafb0",
	punctuation_special = "#8cafb0",
	search = "#775f9e",
	select = "#952099",
	special = "#ddb4fa",
	statement = "#f3dc6c",
	storage = "#4697b8",
	string = "#41a886",
	string_escape = "#ce5c59",
	string_regex = "#ce5c59",
	string_special = "#ddb4fa",
	structure = "#4697b8",
	syntax_error = "#ce5c59",
	tag = "#2d9caa",
	tag_attribute = "#d8f0e6",
	tag_delimiter = "#8cafb0",
	text = "#d8f0e6",
	text_contrast_bg_high = "#952099",
	text_contrast_bg_low = "#8cafb0",
	text_environment_name = "#d8f0e6",
	text_environment = "#d8f0e6",
	text_literal = "#d8f0e6",
	text_math = "#b383c6",
	text_reference = "#b383c6",
	throw = "#ce5c59",
	todo = "#4697b8",
	type = "#4697b8",
	type_builtin = "#4697b8",
	type_parameter = "#b383c6",
	uri = "#2d9caa",
	variable = "#ddb4fa",
	variable_builtin = "#ddb4fa",
	warning = "#f3dc6c",
})

--- @type highlite.color.palette.terminal
local terminal_palette = {
	"#1e1c32",
	"#ce5c59",
	"#41a886",
	"#f3dc6c",
	"#4697b8",
	"#b383c6",
	"#8cafb0",
	"#3d385f",
	"#775f9e",
	"#952099",
	"#641566",
	"#f49b3b",
	"#2d9caa",
	"#ddb4fa",
	"#2b2546",
	"#d8f0e6",
}

--[[ Generate Groups ]]
local groups = Highlite.groups("default", palette)

--[[ Override Groups ]]

--[[ Generate ]]
Highlite.generate("highlite-coloratura", groups, terminal_palette)
